<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.hibernate.internal.FetchingScrollableResultsImpl"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="com.aditya.feignclients.AddressFeignClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.loadbalancer.annotation.LoadBalancerClient"/>
    <fullyQualifiedTypeName name="feign.Feign.Builder"/>
    <fullyQualifiedTypeName name="feign.Feign"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="ch.qos.logback.classic.Logger"/>
    <fullyQualifiedTypeName name="com.aditya.app.CustomFilter"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="org.springframework.web.server.ServerWebExchange"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GatewayFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GlobalFilter"/>
    <fullyQualifiedTypeName name="io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler.ServerHandshakeStateEvent"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Mono"/>
    <fullyQualifiedTypeName name="javax.ws.rs.core.Response"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpRequest"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpResponse"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.function.client.WebClient"/>
    <fullyQualifiedTypeName name="org.hibernate.tool.hbm2ddl.SingleLineSqlCommandExtractor"/>
    <fullyQualifiedTypeName name="org.aspectj.weaver.WeakClassLoaderReference"/>
    <fullyQualifiedTypeName name="com.aditya.response.AddressResponse"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.aditya.service.CommonService"/>
    <fullyQualifiedTypeName name="org.hibernate.query.criteria.internal.expression.function.AggregationFunction.COUNT"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="java.lang.Throwable"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="java.awt.List"/>
    <fullyQualifiedTypeName name="java.lang.ArrayStoreException"/>
    <fullyQualifiedTypeName name="com.aditya.app.courses.controller.CourseController"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="com.aditya.app.courses.entity.Course"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseBody"/>
    <fullyQualifiedTypeName name="com.in28minutes.unittesting.unittesting.business.DataServiceStub"/>
    <fullyQualifiedTypeName name="com.in28minutes.unittesting.unittesting.data.DataService"/>
    <fullyQualifiedTypeName name="com.in28minutes.unittesting.unittesting.business.BusinessImpl"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeEach"/>
    <fullyQualifiedTypeName name="org.mockito.InjectMocks"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.extension.ExtendWith"/>
    <fullyQualifiedTypeName name="org.mockito.junit.MockitoJUnitRunner"/>
    <fullyQualifiedTypeName name="org.mockito.exceptions.base.MockitoException"/>
    <fullyQualifiedTypeName name="org.mockito.junit.jupiter.MockitoExtension"/>
    <fullyQualifiedTypeName name="com.in28minutes.unittesting.unittesting.business.ListMockTest"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
</qualifiedTypeNameHistroy>
